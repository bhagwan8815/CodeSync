{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code Reviewer\\\\Client\\\\src\\\\Components\\\\CollbrationComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport Client from './Client';\nimport CollbrationEditor from './CollbrationEditor';\nimport { initSocket } from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CollbrationComponent() {\n  _s();\n  var _location$state3;\n  const [clients, setClients] = useState([]);\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const {\n    roomId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n      socketRef.current = await initSocket();\n      const handleError = e => {\n        console.error(\"Socket error:\", e);\n        toast.error(\"Socket connection failed\");\n        navigate(\"/\");\n      };\n      socketRef.current.on('connect_error', handleError);\n      socketRef.current.on('connect_failed', handleError);\n      socketRef.current.emit('join', {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n      socketRef.current.on(\"joined\", _ref => {\n        var _location$state2;\n        let {\n          clients,\n          username,\n          socketId\n        } = _ref;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room`);\n        }\n        setClients(clients);\n        socketRef.current.emit('code-change', {\n          code: codeRef.current,\n          socketId\n        });\n      });\n      socketRef.current.on(\"disconnected\", _ref2 => {\n        let {\n          socketId,\n          username\n        } = _ref2;\n        toast.error(`${username} left the room`);\n        setClients(prev => prev.filter(client => client.socketId !== socketId));\n      });\n    };\n    init();\n\n    // Cleanup function to prevent duplicate event listeners\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current.off(\"joined\");\n        socketRef.current.off(\"disconnected\");\n      }\n    };\n  }, [roomId, (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.username, navigate]); // Added dependencies\n\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  const copyRoomId = async () => {\n    if (!roomId) {\n      toast.error(\"Room ID is not available.\");\n      return;\n    }\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(\"Room ID copied!\");\n    } catch (error) {\n      toast.error(\"Unable to copy Room ID.\");\n    }\n  };\n  const leaveRoom = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-12 gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-2 flex flex-col h-screen bg-red-300 rounded-md p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo.webp\",\n        alt: \"logo\",\n        width: \"150px\",\n        height: \"50px\",\n        className: \"mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col overflow-auto h-[330px]\",\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n          username: client.username\n        }, client.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyRoomId,\n        className: \"border-none bg-green-600 p-2 text-white font-bold hover:bg-green-800 mt-2 rounded-lg\",\n        children: \"Copy Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leaveRoom,\n        className: \"border-none bg-red-600 p-2 text-white font-bold hover:bg-red-800 mt-2 rounded-lg\",\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-10 flex flex-col h-screen bg-green-200 rounded-md p-2\",\n      children: /*#__PURE__*/_jsxDEV(CollbrationEditor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => codeRef.current = code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useEffect } from 'react'\n\n// import {useState} from 'react'\n// import Client from './Client'\n// import CollbrationEditor from './CollbrationEditor'\n// import { initSocket } from '../socket';\n// import { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\n// import { useRef } from 'react';\n// import {toast} from \"react-hot-toast\"\n\n// export default function CollbrationComponent() {\n\n//   const [clients,setClients] = useState([ ]);\n//   const socketRef = useRef(null);\n//   const codeRef = useRef(null);\n//   const {roomId} = useParams();\n//   const location = useLocation();\n//   const Navigate = useNavigate();\n//   useEffect(()=>{\n//     const init = async () =>{\n//       socketRef.current = await initSocket();\n//       socketRef.current.on('connect_error', (err) => handleError(err));\n//       socketRef.current.on('connect_failed', (err) => handleError(err));\n\n//       const handleError=(e)=>{\n//         console.log(\"socket error =>\" ,e);\n//         toast.error(\"socket connection failed\");\n//           Navigate(\"/\")\n//       }\n\n//        socketRef.current.emit('join',{\n//         roomId,\n//         username:location.state?.username,\n//        });\n//        socketRef.current.on(\"joined\", ({ clients, username,socketId})=>{\n//         if(username !== location.state?.username){\n//           toast.success(`${username} joined the room`);\n\n//         }\n//         setClients(clients);\n//         // socketRef.current.emit('sync-code',codeRef.current);\n//         socketRef.current.emit('code-change',{\n//           code:codeRef.current,\n//           socketId\n//         });\n//        });\n\n//        //disconnected  (if any user leave the room then )\n//        socketRef.current.on(\"disconnected\", ({socketId , username}) =>{\n//         toast.error(`${username} left the room`);\n//         setClients((prev)=>{\n//           return prev.filter(\n//             (client) => client.socketId != socketId\n//           )\n//         })\n//        })\n//     };\n//     init();\n\n//     //if we add this code it dont show out collbration editor, so that's why i commentd this code \n\n//   //   return () =>{\n//   //     socketRef.current.disconnect();\n//   //     socketRef.current.off(\"joined\");\n//   //     socketRef.current.off(\"disconnected\");\n//   //   }\n//   //\n//    },[]);\n\n//   if(!location.state){\n//     return <Navigate to=\"/\"/>\n//   }\n\n//   // const copyRoomId = async ()=>{\n//   //   try{\n//   //     await navigator.clipboard.writeText(roomId);\n//   //     toast.success(\"Room Id is copied.\")\n//   //   }catch(error){\n//   //     toast.error(\"Unable to copy room id\");\n//   //   }\n//   // }\n\n//   const copyRoomId = async () => {\n//   if (!roomId) {\n//     toast.error(\"Room ID is not available.\");\n//     return;\n//   }\n\n//   try {\n//     await navigator.clipboard.writeText(roomId);\n//     toast.success(\"Room ID copied!\");\n//   } catch (error) {\n//     toast.error(\"Unable to copy Room ID.\");\n//   }\n// };\n\n//   const leaveRoom =()=>{\n//     // toast.error(` left the room` );\n//     Navigate(\"/\");\n//   }\n//   return (\n//    <div className='grid grid-cols-12 gap-3'>\n\n//     {/* left pannel */}\n//    <div className='col-span-2 flex flex-col h-screen bg-red-300 rounded-md p-2'>\n//      <img src=\"/images/logo.webp\" alt=\"logo\"  width=\"150px\" height=\"50px\" className='mx-auto'/>\n//      <hr className='mt-2 ' />\n\n//      {/* list of users */}\n//      <div className='flex flex-col overflow-auto h-[330px] '>\n//       {clients.map((client)=>(\n//         <Client key={client.socketId} username={client.username}/>\n//       ))}\n\n//      </div>\n\n//      {/* button  */}\n//      <hr  className='mb-2'/>\n//      <button onClick={copyRoomId} className='border-none bg-green-600 p-2 text-white text-bold hover:bg-green-800 mt-2 rounded-lg'>Copy Room ID</button>\n//      <button onClick={leaveRoom} className='border-none bg-red-600 p-2 text-white text-bold hover:bg-red-800 mt-2 rounded-lg'>Leave Room</button>\n\n//    </div>\n\n//    {/* right code editor pannel */}\n//    <div className='col-span-10  flex flex-col h-screen bg-green-200 rounded-md p-2'>\n//    <CollbrationEditor socketRef={socketRef} roomId={roomId} onCodeChange={(code)=>(codeRef.current = code)}/>\n//      </div>\n\n//    </div>\n\n//   )\n// }\n_s(CollbrationComponent, \"1/JtIq6M38G1dEhuUiDL/rXe6Xs=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = CollbrationComponent;\nvar _c;\n$RefreshReg$(_c, \"CollbrationComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","useNavigate","Navigate","useParams","toast","Client","CollbrationEditor","initSocket","jsxDEV","_jsxDEV","CollbrationComponent","_s","_location$state3","clients","setClients","socketRef","codeRef","roomId","location","navigate","init","_location$state","current","handleError","e","console","error","on","emit","username","state","_ref","_location$state2","socketId","success","code","_ref2","prev","filter","client","disconnect","off","to","fileName","_jsxFileName","lineNumber","columnNumber","copyRoomId","navigator","clipboard","writeText","leaveRoom","className","children","src","alt","width","height","map","onClick","onCodeChange","_c","$RefreshReg$"],"sources":["E:/Code Reviewer/Client/src/Components/CollbrationComponent.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport Client from './Client';\r\nimport CollbrationEditor from './CollbrationEditor';\r\nimport { initSocket } from '../socket';\r\n\r\nexport default function CollbrationComponent() {\r\n  const [clients, setClients] = useState([]);\r\n  const socketRef = useRef(null);\r\n  const codeRef = useRef(null);\r\n  const { roomId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      socketRef.current = await initSocket();\r\n\r\n      const handleError = (e) => {\r\n        console.error(\"Socket error:\", e);\r\n        toast.error(\"Socket connection failed\");\r\n        navigate(\"/\");\r\n      };\r\n\r\n      socketRef.current.on('connect_error', handleError);\r\n      socketRef.current.on('connect_failed', handleError);\r\n\r\n      socketRef.current.emit('join', {\r\n        roomId,\r\n        username: location.state?.username,\r\n      });\r\n\r\n      socketRef.current.on(\"joined\", ({ clients, username, socketId }) => {\r\n        if (username !== location.state?.username) {\r\n          toast.success(`${username} joined the room`);\r\n        }\r\n        setClients(clients);\r\n\r\n        socketRef.current.emit('code-change', {\r\n          code: codeRef.current,\r\n          socketId,\r\n        });\r\n      });\r\n\r\n      socketRef.current.on(\"disconnected\", ({ socketId, username }) => {\r\n        toast.error(`${username} left the room`);\r\n        setClients((prev) => prev.filter((client) => client.socketId !== socketId));\r\n      });\r\n    };\r\n\r\n    init();\r\n\r\n    // Cleanup function to prevent duplicate event listeners\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n        socketRef.current.off(\"joined\");\r\n        socketRef.current.off(\"disconnected\");\r\n      }\r\n    };\r\n  }, [roomId, location.state?.username, navigate]); // Added dependencies\r\n\r\n  if (!location.state) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  const copyRoomId = async () => {\r\n    if (!roomId) {\r\n      toast.error(\"Room ID is not available.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await navigator.clipboard.writeText(roomId);\r\n      toast.success(\"Room ID copied!\");\r\n    } catch (error) {\r\n      toast.error(\"Unable to copy Room ID.\");\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-3\">\r\n      {/* Left Panel */}\r\n      <div className=\"col-span-2 flex flex-col h-screen bg-red-300 rounded-md p-2\">\r\n        <img src=\"/images/logo.webp\" alt=\"logo\" width=\"150px\" height=\"50px\" className=\"mx-auto\" />\r\n        <hr className=\"mt-2\" />\r\n\r\n        {/* List of Users */}\r\n        <div className=\"flex flex-col overflow-auto h-[330px]\">\r\n          {clients.map((client) => (\r\n            <Client key={client.socketId} username={client.username} />\r\n          ))}\r\n        </div>\r\n\r\n        <hr className=\"mb-2\" />\r\n        <button onClick={copyRoomId} className=\"border-none bg-green-600 p-2 text-white font-bold hover:bg-green-800 mt-2 rounded-lg\">\r\n          Copy Room ID\r\n        </button>\r\n        <button onClick={leaveRoom} className=\"border-none bg-red-600 p-2 text-white font-bold hover:bg-red-800 mt-2 rounded-lg\">\r\n          Leave Room\r\n        </button>\r\n      </div>\r\n\r\n      {/* Right Code Editor Panel */}\r\n      <div className=\"col-span-10 flex flex-col h-screen bg-green-200 rounded-md p-2\">\r\n        <CollbrationEditor socketRef={socketRef} roomId={roomId} onCodeChange={(code) => (codeRef.current = code)} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react'\r\n\r\n// import {useState} from 'react'\r\n// import Client from './Client'\r\n// import CollbrationEditor from './CollbrationEditor'\r\n// import { initSocket } from '../socket';\r\n// import { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\r\n// import { useRef } from 'react';\r\n// import {toast} from \"react-hot-toast\"\r\n\r\n\r\n\r\n// export default function CollbrationComponent() {\r\n\r\n//   const [clients,setClients] = useState([ ]);\r\n//   const socketRef = useRef(null);\r\n//   const codeRef = useRef(null);\r\n//   const {roomId} = useParams();\r\n//   const location = useLocation();\r\n//   const Navigate = useNavigate();\r\n//   useEffect(()=>{\r\n//     const init = async () =>{\r\n//       socketRef.current = await initSocket();\r\n//       socketRef.current.on('connect_error', (err) => handleError(err));\r\n//       socketRef.current.on('connect_failed', (err) => handleError(err));\r\n\r\n//       const handleError=(e)=>{\r\n//         console.log(\"socket error =>\" ,e);\r\n//         toast.error(\"socket connection failed\");\r\n//           Navigate(\"/\")\r\n//       }\r\n     \r\n//        socketRef.current.emit('join',{\r\n//         roomId,\r\n//         username:location.state?.username,\r\n//        });\r\n//        socketRef.current.on(\"joined\", ({ clients, username,socketId})=>{\r\n//         if(username !== location.state?.username){\r\n//           toast.success(`${username} joined the room`);\r\n          \r\n//         }\r\n//         setClients(clients);\r\n//         // socketRef.current.emit('sync-code',codeRef.current);\r\n//         socketRef.current.emit('code-change',{\r\n//           code:codeRef.current,\r\n//           socketId\r\n//         });\r\n//        });\r\n\r\n//        //disconnected  (if any user leave the room then )\r\n//        socketRef.current.on(\"disconnected\", ({socketId , username}) =>{\r\n//         toast.error(`${username} left the room`);\r\n//         setClients((prev)=>{\r\n//           return prev.filter(\r\n//             (client) => client.socketId != socketId\r\n//           )\r\n//         })\r\n//        })\r\n//     };\r\n//     init();\r\n\r\n    \r\n\r\n\r\n//     //if we add this code it dont show out collbration editor, so that's why i commentd this code \r\n\r\n//   //   return () =>{\r\n//   //     socketRef.current.disconnect();\r\n//   //     socketRef.current.off(\"joined\");\r\n//   //     socketRef.current.off(\"disconnected\");\r\n//   //   }\r\n//   //\r\n//    },[]);\r\n  \r\n\r\n//   if(!location.state){\r\n//     return <Navigate to=\"/\"/>\r\n//   }\r\n\r\n\r\n//   // const copyRoomId = async ()=>{\r\n//   //   try{\r\n//   //     await navigator.clipboard.writeText(roomId);\r\n//   //     toast.success(\"Room Id is copied.\")\r\n//   //   }catch(error){\r\n//   //     toast.error(\"Unable to copy room id\");\r\n//   //   }\r\n//   // }\r\n\r\n//   const copyRoomId = async () => {\r\n//   if (!roomId) {\r\n//     toast.error(\"Room ID is not available.\");\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     await navigator.clipboard.writeText(roomId);\r\n//     toast.success(\"Room ID copied!\");\r\n//   } catch (error) {\r\n//     toast.error(\"Unable to copy Room ID.\");\r\n//   }\r\n// };\r\n\r\n//   const leaveRoom =()=>{\r\n//     // toast.error(` left the room` );\r\n//     Navigate(\"/\");\r\n//   }\r\n//   return (\r\n//    <div className='grid grid-cols-12 gap-3'>\r\n\r\n//     {/* left pannel */}\r\n//    <div className='col-span-2 flex flex-col h-screen bg-red-300 rounded-md p-2'>\r\n//      <img src=\"/images/logo.webp\" alt=\"logo\"  width=\"150px\" height=\"50px\" className='mx-auto'/>\r\n//      <hr className='mt-2 ' />\r\n\r\n//      {/* list of users */}\r\n//      <div className='flex flex-col overflow-auto h-[330px] '>\r\n//       {clients.map((client)=>(\r\n//         <Client key={client.socketId} username={client.username}/>\r\n//       ))}\r\n  \r\n\r\n//      </div>\r\n\r\n//      {/* button  */}\r\n//      <hr  className='mb-2'/>\r\n//      <button onClick={copyRoomId} className='border-none bg-green-600 p-2 text-white text-bold hover:bg-green-800 mt-2 rounded-lg'>Copy Room ID</button>\r\n//      <button onClick={leaveRoom} className='border-none bg-red-600 p-2 text-white text-bold hover:bg-red-800 mt-2 rounded-lg'>Leave Room</button>\r\n\r\n\r\n//    </div>\r\n\r\n    \r\n//    {/* right code editor pannel */}\r\n//    <div className='col-span-10  flex flex-col h-screen bg-green-200 rounded-md p-2'>\r\n//    <CollbrationEditor socketRef={socketRef} roomId={roomId} onCodeChange={(code)=>(codeRef.current = code)}/>\r\n//      </div>\r\n\r\n//    </div>\r\n   \r\n//   )\r\n// }\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}