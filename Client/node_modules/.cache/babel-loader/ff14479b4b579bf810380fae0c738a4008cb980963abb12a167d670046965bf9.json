{"ast":null,"code":"import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n}\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n  static init(diagnostics, panel, state) {\n    // Filter the list of diagnostics for which to create markers\n    let markedDiagnostics = diagnostics;\n    let diagnosticFilter = state.facet(lintConfig).markerFilter;\n    if (diagnosticFilter) markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n    let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n    let deco = new RangeSetBuilder(),\n      active = [],\n      pos = 0;\n    for (let i = 0;;) {\n      let next = i == sorted.length ? null : sorted[i];\n      if (!next && !active.length) break;\n      let from, to;\n      if (active.length) {\n        from = pos;\n        to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n      } else {\n        from = next.from;\n        to = next.to;\n        active.push(next);\n        i++;\n      }\n      while (i < sorted.length) {\n        let next = sorted[i];\n        if (next.from == from && (next.to > next.from || next.to == from)) {\n          active.push(next);\n          i++;\n          to = Math.min(next.to, to);\n        } else {\n          to = Math.min(next.from, to);\n          break;\n        }\n      }\n      let sev = maxSeverity(active);\n      if (active.some(d => d.from == d.to || d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)) {\n        deco.add(from, from, Decoration.widget({\n          widget: new DiagnosticWidget(sev),\n          diagnostics: active.slice()\n        }));\n      } else {\n        let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n        deco.add(from, to, Decoration.mark({\n          class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n          diagnostics: active.slice(),\n          inclusiveEnd: active.some(a => a.to > to)\n        }));\n      }\n      pos = to;\n      for (let i = 0; i < active.length; i++) if (active[i].to <= pos) active.splice(i--, 1);\n    }\n    let set = deco.finish();\n    return new LintState(set, panel, findDiagnostic(set));\n  }\n}\nfunction findDiagnostic(diagnostics) {\n  let diagnostic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, _ref) => {\n    let {\n      spec\n    } = _ref;\n    if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0) return;\n    if (!found) found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);else if (spec.diagnostics.indexOf(found.diagnostic) < 0) return false;else found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n  });\n  return found;\n}\nfunction hideTooltip(tr, tooltip) {\n  let from = tooltip.pos,\n    to = tooltip.end || from;\n  let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n  if (result != null) return result;\n  let line = tr.startState.doc.lineAt(tooltip.pos);\n  return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n  };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n  update(value, tr) {\n    if (tr.docChanged && value.diagnostics.size) {\n      let mapped = value.diagnostics.map(tr.changes),\n        selected = null,\n        panel = value.panel;\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n      if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel) panel = null;\n      value = new LintState(mapped, panel, selected);\n    }\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n        value = LintState.init(effect.value, panel, tr.state);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n    return value;\n  },\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n  let lint = state.field(lintState, false);\n  return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found,\n    start = -1,\n    end = -1;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, _ref2) => {\n    let {\n      spec\n    } = _ref2;\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found = spec.diagnostics;\n      start = from;\n      end = to;\n      return false;\n    }\n  });\n  let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n  if (found && diagnosticFilter) found = diagnosticFilter(found, view.state);\n  if (!found) return null;\n  return {\n    pos: start,\n    end: end,\n    above: view.state.doc.lineAt(start).to < end,\n    create() {\n      return {\n        dom: diagnosticsTooltip(view, found)\n      };\n    }\n  };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n  return elt(\"ul\", {\n    class: \"cm-tooltip-lint\"\n  }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n    next = field.diagnostics.iter(sel.to + 1);\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = view => {\n  let {\n      state\n    } = view,\n    field = state.field(lintState, false);\n  if (!field) return false;\n  let sel = state.selection.main;\n  let prevFrom, prevTo, lastFrom, lastTo;\n  field.diagnostics.between(0, state.doc.length, (from, to) => {\n    if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n      prevFrom = from;\n      prevTo = to;\n    }\n    if (lastFrom == null || from > lastFrom) {\n      lastFrom = from;\n      lastTo = to;\n    }\n  });\n  if (lastFrom == null || prevFrom == null && lastFrom == sel.from) return false;\n  view.dispatch({\n    selection: {\n      anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom,\n      head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel,\n  preventDefault: true\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.timeout = -1;\n    this.set = true;\n    let {\n      delay\n    } = view.state.facet(lintConfig);\n    this.lintTime = Date.now() + delay;\n    this.run = this.run.bind(this);\n    this.timeout = setTimeout(this.run, delay);\n  }\n  run() {\n    clearTimeout(this.timeout);\n    let now = Date.now();\n    if (now < this.lintTime - 10) {\n      this.timeout = setTimeout(this.run, this.lintTime - now);\n    } else {\n      this.set = false;\n      let {\n          state\n        } = this.view,\n        {\n          sources\n        } = state.facet(lintConfig);\n      if (sources.length) batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n        if (this.view.state.doc == state.doc) this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n      }, error => {\n        logException(this.view.state, error);\n      });\n    }\n  }\n  update(update) {\n    let config = update.state.facet(lintConfig);\n    if (update.docChanged || config != update.startState.facet(lintConfig) || config.needsRefresh && config.needsRefresh(update)) {\n      this.lintTime = Date.now() + config.delay;\n      if (!this.set) {\n        this.set = true;\n        this.timeout = setTimeout(this.run, config.delay);\n      }\n    }\n  }\n  force() {\n    if (this.set) {\n      this.lintTime = Date.now();\n      this.run();\n    }\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n});\nfunction batchResults(promises, sink, error) {\n  let collected = [],\n    timeout = -1;\n  for (let p of promises) p.then(value => {\n    collected.push(value);\n    clearTimeout(timeout);\n    if (collected.length == promises.length) sink(collected);else timeout = setTimeout(() => sink(collected), 200);\n  }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n  combine(input) {\n    return Object.assign({\n      sources: input.map(i => i.source).filter(x => x != null)\n    }, combineConfig(input.map(i => i.config), {\n      delay: 750,\n      markerFilter: null,\n      tooltipFilter: null,\n      needsRefresh: null,\n      hideOn: () => null\n    }, {\n      needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n    }));\n  }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [lintConfig.of({\n    source,\n    config\n  }), lintPlugin, lintExtensions];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n  let plugin = view.plugin(lintPlugin);\n  if (plugin) plugin.force();\n}\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n    assigned.push(\"\");\n  }\n  return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let fired = false,\n      click = e => {\n        e.preventDefault();\n        if (fired) return;\n        fired = true;\n        let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n        if (found) action.apply(view, found.from, found.to);\n      };\n    let {\n        name\n      } = action,\n      keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      type: \"button\",\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n  constructor(sev) {\n    super();\n    this.sev = sev;\n  }\n  eq(other) {\n    return other.sev == this.sev;\n  }\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.sev\n    });\n  }\n}\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n}\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) {\n        // A-Z\n        let {\n            diagnostic\n          } = this.items[this.selectedIndex],\n          keys = assignKeys(diagnostic.actions);\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n      event.preventDefault();\n    };\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      type: \"button\",\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n    return -1;\n  }\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n      needsSync = false,\n      newSelectedItem = null;\n    let seen = new Set();\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, _ref3) => {\n      let {\n        spec\n      } = _ref3;\n      for (let diagnostic of spec.diagnostics) {\n        if (seen.has(diagnostic)) continue;\n        seen.add(diagnostic);\n        let found = -1,\n          item;\n        for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == diagnostic) {\n          found = j;\n          break;\n        }\n        if (found < 0) {\n          item = new PanelItem(this.view, diagnostic);\n          this.items.splice(i, 0, item);\n          needsSync = true;\n        } else {\n          item = this.items[found];\n          if (found > i) {\n            this.items.splice(i, found - i);\n            needsSync = true;\n          }\n        }\n        if (selected && item.diagnostic == selected.diagnostic) {\n          if (!item.dom.hasAttribute(\"aria-selected\")) {\n            item.dom.setAttribute(\"aria-selected\", \"true\");\n            newSelectedItem = item;\n          }\n        } else if (item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.removeAttribute(\"aria-selected\");\n        }\n        i++;\n      }\n    });\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: _ref4 => {\n          let {\n            sel,\n            panel\n          } = _ref4;\n          let scaleY = panel.height / this.list.offsetHeight;\n          if (sel.top < panel.top) this.list.scrollTop -= (panel.top - sel.top) / scaleY;else if (sel.bottom > panel.bottom) this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n        }\n      });\n    } else if (this.selectedIndex < 0) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n    if (needsSync) this.sync();\n  }\n  sync() {\n    let domPos = this.list.firstChild;\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n    while (domPos) rm();\n  }\n  moveSelection(selectedIndex) {\n    if (this.selectedIndex < 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n  static open(view) {\n    return new LintPanel(view);\n  }\n}\nfunction svg(content) {\n  let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `viewBox=\"0 0 40 40\"`;\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n  return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnostic-hint\": {\n    borderLeft: \"5px solid #66d\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\",\n    cursor: \"pointer\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\",\n    paddingBottom: \"0.7px\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-hint\": {\n    backgroundImage: /*@__PURE__*/underline(\"#66d\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-tooltip-lint\": {\n    padding: 0,\n    margin: 0\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-lintPoint-hint\": {\n    \"&:after\": {\n      borderBottomColor: \"#66d\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\nfunction severityWeight(sev) {\n  return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n  let sev = \"hint\",\n    weight = 1;\n  for (let d of diagnostics) {\n    let w = severityWeight(d.severity);\n    if (w > weight) {\n      weight = w;\n      sev = d.severity;\n    }\n  }\n  return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n  constructor(diagnostics) {\n    super();\n    this.diagnostics = diagnostics;\n    this.severity = maxSeverity(diagnostics);\n  }\n  toDOM(view) {\n    let elt = document.createElement(\"div\");\n    elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n    let diagnostics = this.diagnostics;\n    let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n    if (diagnosticsFilter) diagnostics = diagnosticsFilter(diagnostics, view.state);\n    if (diagnostics.length) elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n    return elt;\n  }\n}\nfunction trackHoverOn(view, marker) {\n  let mousemove = event => {\n    let rect = marker.getBoundingClientRect();\n    if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ && event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */) return;\n    for (let target = event.target; target; target = target.parentNode) {\n      if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\")) return;\n    }\n    window.removeEventListener(\"mousemove\", mousemove);\n    if (view.state.field(lintGutterTooltip)) view.dispatch({\n      effects: setLintGutterTooltip.of(null)\n    });\n  };\n  window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n  function hovered() {\n    let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n    const linePos = view.coordsAtPos(line.from);\n    if (linePos) {\n      view.dispatch({\n        effects: setLintGutterTooltip.of({\n          pos: line.from,\n          above: false,\n          clip: false,\n          create() {\n            return {\n              dom: diagnosticsTooltip(view, diagnostics),\n              getCoords: () => marker.getBoundingClientRect()\n            };\n          }\n        })\n      });\n    }\n    marker.onmouseout = marker.onmousemove = null;\n    trackHoverOn(view, marker);\n  }\n  let {\n    hoverTime\n  } = view.state.facet(lintGutterConfig);\n  let hoverTimeout = setTimeout(hovered, hoverTime);\n  marker.onmouseout = () => {\n    clearTimeout(hoverTimeout);\n    marker.onmouseout = marker.onmousemove = null;\n  };\n  marker.onmousemove = () => {\n    clearTimeout(hoverTimeout);\n    hoverTimeout = setTimeout(hovered, hoverTime);\n  };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n  let byLine = Object.create(null);\n  for (let diagnostic of diagnostics) {\n    let line = doc.lineAt(diagnostic.from);\n    (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n  }\n  let markers = [];\n  for (let line in byLine) {\n    markers.push(new LintGutterMarker(byLine[line]).range(+line));\n  }\n  return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n  class: \"cm-gutter-lint\",\n  markers: view => view.state.field(lintGutterMarkers),\n  widgetMarker: (view, widget, block) => {\n    let diagnostics = [];\n    view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n      if (from > block.from && from < block.to) diagnostics.push(...value.diagnostics);\n    });\n    return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n  }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n  create() {\n    return RangeSet.empty;\n  },\n  update(markers, tr) {\n    markers = markers.map(tr.changes);\n    let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        let diagnostics = effect.value;\n        if (diagnosticFilter) diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n        markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n      }\n    }\n    return markers;\n  }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n  update(tooltip, tr) {\n    if (tooltip && tr.docChanged) tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), {\n      pos: tr.changes.mapPos(tooltip.pos)\n    });\n    return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n  },\n  provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutter-lint\": {\n    width: \"1.4em\",\n    \"& .cm-gutterElement\": {\n      padding: \".2em\"\n    }\n  },\n  \".cm-lint-marker\": {\n    width: \"1em\",\n    height: \"1em\"\n  },\n  \".cm-lint-marker-info\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n  },\n  \".cm-lint-marker-warning\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`)\n  },\n  \".cm-lint-marker-error\": {\n    content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n  }\n});\nconst lintExtensions = [lintState, /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n  let {\n    selected,\n    panel\n  } = state.field(lintState);\n  return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n}), /*@__PURE__*/hoverTooltip(lintTooltip, {\n  hideOn: hideTooltip\n}), baseTheme];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    return combineConfig(configs, {\n      hoverTime: 300 /* Hover.Time */,\n      markerFilter: null,\n      tooltipFilter: null\n    });\n  }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n  let lState = state.field(lintState, false);\n  if (lState && lState.diagnostics.size) {\n    let pending = [],\n      pendingStart = [],\n      lastEnd = -1;\n    for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n      for (let i = 0; i < pending.length; i++) if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n        f(pending[i], pendingStart[i], lastEnd);\n        pending.splice(i, 1);\n        pendingStart.splice(i--, 1);\n      }\n      if (!iter.value) break;\n      for (let d of iter.value.spec.diagnostics) if (pending.indexOf(d) < 0) {\n        pending.push(d);\n        pendingStart.push(iter.from);\n      }\n      lastEnd = iter.to;\n    }\n  }\n}\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };","map":{"version":3,"names":["Decoration","showPanel","EditorView","ViewPlugin","gutter","showTooltip","hoverTooltip","getPanel","logException","WidgetType","GutterMarker","StateEffect","StateField","Facet","combineConfig","RangeSet","RangeSetBuilder","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","state","markedDiagnostics","diagnosticFilter","facet","lintConfig","markerFilter","sorted","slice","sort","a","b","deco","active","pos","i","next","length","reduce","p","d","Math","min","push","sev","maxSeverity","some","doc","lineAt","add","widget","DiagnosticWidget","markClass","c","mark","class","inclusiveEnd","splice","set","finish","findDiagnostic","arguments","undefined","after","found","between","_ref","spec","indexOf","hideTooltip","tr","tooltip","end","result","hideOn","line","startState","effects","e","is","setDiagnosticsEffect","changes","touchesRange","max","maybeEnableLint","field","lintState","concat","appendConfig","of","lintExtensions","setDiagnostics","define","togglePanel","movePanelSelection","create","none","update","value","docChanged","size","mapped","map","selPos","mapPos","autoPanel","effect","LintPanel","open","provide","f","val","decorations","s","diagnosticCount","lint","activeMark","lintTooltip","view","side","start","_ref2","tooltipFilter","above","dom","diagnosticsTooltip","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","iter","anchor","head","scrollIntoView","previousDiagnostic","prevFrom","prevTo","lastFrom","lastTo","lintKeymap","key","run","preventDefault","lintPlugin","fromClass","timeout","delay","lintTime","Date","now","bind","setTimeout","clearTimeout","sources","batchResults","Promise","resolve","annotations","error","config","needsRefresh","force","destroy","promises","sink","collected","then","combine","input","Object","assign","source","filter","x","u","linter","forceLinting","plugin","assignKeys","actions","assigned","name","ch","test","toLowerCase","inPanel","_a","keys","severity","renderMessage","message","action","fired","click","apply","keyIndex","nameElt","type","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","seen","Set","_start","_end","_ref3","has","item","j","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","_ref4","scaleY","height","offsetHeight","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","svg","content","attrs","encodeURIComponent","underline","color","baseTheme","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","cursor","fontSize","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","margin","position","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","right","background","severityWeight","weight","w","LintGutterMarker","document","createElement","className","diagnosticsFilter","lintGutterConfig","onmouseover","gutterMarkerMouseOver","trackHoverOn","marker","mousemove","rect","clientX","clientY","nodeType","classList","window","removeEventListener","lintGutterTooltip","setLintGutterTooltip","addEventListener","hovered","elementAtHeight","documentTop","linePos","coordsAtPos","clip","getCoords","onmouseout","onmousemove","hoverTime","hoverTimeout","markersForDiagnostics","byLine","markers","range","lintGutterExtension","lintGutterMarkers","widgetMarker","block","empty","t","lintGutterTheme","width","compute","configs","lintGutter","forEachDiagnostic","lState","pending","pendingStart","lastEnd"],"sources":["E:/Code Reviewer/Client/node_modules/@codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n        let deco = new RangeSetBuilder(), active = [], pos = 0;\n        for (let i = 0;;) {\n            let next = i == sorted.length ? null : sorted[i];\n            if (!next && !active.length)\n                break;\n            let from, to;\n            if (active.length) {\n                from = pos;\n                to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n            }\n            else {\n                from = next.from;\n                to = next.to;\n                active.push(next);\n                i++;\n            }\n            while (i < sorted.length) {\n                let next = sorted[i];\n                if (next.from == from && (next.to > next.from || next.to == from)) {\n                    active.push(next);\n                    i++;\n                    to = Math.min(next.to, to);\n                }\n                else {\n                    to = Math.min(next.from, to);\n                    break;\n                }\n            }\n            let sev = maxSeverity(active);\n            if (active.some(d => d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from))) {\n                deco.add(from, from, Decoration.widget({\n                    widget: new DiagnosticWidget(sev),\n                    diagnostics: active.slice()\n                }));\n            }\n            else {\n                let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n                deco.add(from, to, Decoration.mark({\n                    class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n                    diagnostics: active.slice(),\n                    inclusiveEnd: active.some(a => a.to > to)\n                }));\n            }\n            pos = to;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to <= pos)\n                    active.splice(i--, 1);\n        }\n        let set = deco.finish();\n        return new LintState(set, panel, findDiagnostic(set));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0)\n            return;\n        if (!found)\n            found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);\n        else if (spec.diagnostics.indexOf(found.diagnostic) < 0)\n            return false;\n        else\n            found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found, start = -1, end = -1;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found = spec.diagnostics;\n            start = from;\n            end = to;\n            return false;\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (found && diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found)\n        return null;\n    return {\n        pos: start,\n        end: end,\n        above: view.state.doc.lineAt(start).to < end,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                timeout = setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(sev) {\n        super();\n        this.sev = sev;\n    }\n    eq(other) { return other.sev == this.sev; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.sev });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        let seen = new Set();\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            for (let diagnostic of spec.diagnostics) {\n                if (seen.has(diagnostic))\n                    continue;\n                seen.add(diagnostic);\n                let found = -1, item;\n                for (let j = i; j < this.items.length; j++)\n                    if (this.items[j].diagnostic == diagnostic) {\n                        found = j;\n                        break;\n                    }\n                if (found < 0) {\n                    item = new PanelItem(this.view, diagnostic);\n                    this.items.splice(i, 0, item);\n                    needsSync = true;\n                }\n                else {\n                    item = this.items[found];\n                    if (found > i) {\n                        this.items.splice(i, found - i);\n                        needsSync = true;\n                    }\n                }\n                if (selected && item.diagnostic == selected.diagnostic) {\n                    if (!item.dom.hasAttribute(\"aria-selected\")) {\n                        item.dom.setAttribute(\"aria-selected\", \"true\");\n                        newSelectedItem = item;\n                    }\n                }\n                else if (item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.removeAttribute(\"aria-selected\");\n                }\n                i++;\n            }\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n    let sev = \"hint\", weight = 1;\n    for (let d of diagnostics) {\n        let w = severityWeight(d.severity);\n        if (w > weight) {\n            weight = w;\n            sev = d.severity;\n        }\n    }\n    return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = maxSeverity(diagnostics);\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    clip: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            if (from > block.from && from < block.to)\n                diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size) {\n        let pending = [], pendingStart = [], lastEnd = -1;\n        for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n            for (let i = 0; i < pending.length; i++)\n                if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n                    f(pending[i], pendingStart[i], lastEnd);\n                    pending.splice(i, 1);\n                    pendingStart.splice(i--, 1);\n                }\n            if (!iter.value)\n                break;\n            for (let d of iter.value.spec.diagnostics)\n                if (pending.indexOf(d) < 0) {\n                    pending.push(d);\n                    pendingStart.push(iter.from);\n                }\n            lastEnd = iter.to;\n        }\n    }\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}